// Code generated by MockGen. DO NOT EDIT.
// Source: gcas_api.go
//
// Generated by this command:
//
//	mockgen -source=gcas_api.go -destination=../../apiimpl/mocks/gcas_api_mock.go -package=mockapi
//

// Package mockapi is a generated GoMock package.
package mockapi

import (
	reflect "reflect"

	gcasapi "github.com/topgate/gcim-temporary/back/app/internal/api/gcasapi"
	gomock "go.uber.org/mock/gomock"
)

// MockGCASAPI is a mock of GCASAPI interface.
type MockGCASAPI struct {
	ctrl     *gomock.Controller
	recorder *MockGCASAPIMockRecorder
}

// MockGCASAPIMockRecorder is the mock recorder for MockGCASAPI.
type MockGCASAPIMockRecorder struct {
	mock *MockGCASAPI
}

// NewMockGCASAPI creates a new mock instance.
func NewMockGCASAPI(ctrl *gomock.Controller) *MockGCASAPI {
	mock := &MockGCASAPI{ctrl: ctrl}
	mock.recorder = &MockGCASAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGCASAPI) EXPECT() *MockGCASAPIMockRecorder {
	return m.recorder
}

// GetAccounts mocks base method.
func (m *MockGCASAPI) GetAccounts() (*gcasapi.GetAccountsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccounts")
	ret0, _ := ret[0].(*gcasapi.GetAccountsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccounts indicates an expected call of GetAccounts.
func (mr *MockGCASAPIMockRecorder) GetAccounts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccounts", reflect.TypeOf((*MockGCASAPI)(nil).GetAccounts))
}
