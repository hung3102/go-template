// Code generated by MockGen. DO NOT EDIT.
// Source: org_csp_account_repository.go
//
// Generated by this command:
//
//	mockgen -source=org_csp_account_repository.go -destination=../repositoryimpl/mocks/org_csp_account_repository_mock.go -package=mockrepositories
//

// Package mockrepositories is a generated GoMock package.
package mockrepositories

import (
	context "context"
	reflect "reflect"

	entities "github.com/topgate/gcim-temporary/back/app/internal/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockORGCSPAccountRepository is a mock of ORGCSPAccountRepository interface.
type MockORGCSPAccountRepository struct {
	ctrl     *gomock.Controller
	recorder *MockORGCSPAccountRepositoryMockRecorder
}

// MockORGCSPAccountRepositoryMockRecorder is the mock recorder for MockORGCSPAccountRepository.
type MockORGCSPAccountRepositoryMockRecorder struct {
	mock *MockORGCSPAccountRepository
}

// NewMockORGCSPAccountRepository creates a new mock instance.
func NewMockORGCSPAccountRepository(ctrl *gomock.Controller) *MockORGCSPAccountRepository {
	mock := &MockORGCSPAccountRepository{ctrl: ctrl}
	mock.recorder = &MockORGCSPAccountRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockORGCSPAccountRepository) EXPECT() *MockORGCSPAccountRepositoryMockRecorder {
	return m.recorder
}

// ListInvoiceUnitByEventID mocks base method.
func (m *MockORGCSPAccountRepository) ListInvoiceUnitByEventID(ctx context.Context, eventID string) ([]*entities.InvoiceUnit, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInvoiceUnitByEventID", ctx, eventID)
	ret0, _ := ret[0].([]*entities.InvoiceUnit)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInvoiceUnitByEventID indicates an expected call of ListInvoiceUnitByEventID.
func (mr *MockORGCSPAccountRepositoryMockRecorder) ListInvoiceUnitByEventID(ctx, eventID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInvoiceUnitByEventID", reflect.TypeOf((*MockORGCSPAccountRepository)(nil).ListInvoiceUnitByEventID), ctx, eventID)
}
