package gqlresolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"errors"
	"gcim/example/pkg/adapter/api/graphql"
	"log"

	"github.com/google/uuid"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input graphql.NewUser) (*graphql.User, error) {
	log.Println("Create a new USER")
	uuidValue := uuid.NewString()
	user := &graphql.User{ID: uuidValue, FirstName: input.FirstName, LastName: input.LastName}
	users = append(users, user)
	return user, nil
}

// RemoveUser is the resolver for the removeUser field.
func (r *mutationResolver) RemoveUser(ctx context.Context, input graphql.DeleteUser) (*graphql.User, error) {
	index := -1
	for i, user := range users {
		if user.ID == input.UserID {
			index = i
		}
	}
	if index == -1 {
		return nil, errors.New("Cannot find user you are looking for!")
	}
	user := users[index]
	users = append(users[:index], users[index+1:]...)

	return user, nil
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*graphql.User, error) {
	return users, nil
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*graphql.User, error) {
	for _, user := range users {
		if user.ID == id {
			return user, nil
		}
	}
	return nil, errors.New("Cannot find user you are looking for!")
}

// Mutation returns graphql1.MutationResolver implementation.
func (r *Resolver) Mutation() graphql.MutationResolver { return &mutationResolver{r} }

// Query returns graphql1.QueryResolver implementation.
func (r *Resolver) Query() graphql.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func init() {
	log.Println("Init - Users array to be created")
	users = make([]*graphql.User, 0)
	users = append(users, &graphql.User{ID: "1", FirstName: "Srinivasa", LastName: "Ramanujam", Dob: "12/27/1887"})
	users = append(users, &graphql.User{ID: "2", FirstName: "CV", LastName: "Raman", Dob: "11/7/1888"})
	users = append(users, &graphql.User{ID: "3", FirstName: "Subrahmanyan", LastName: "Chandrasekhar", Dob: "10/19/1910"})
	log.Println("Init - Users array has been created")
}

var users []*graphql.User
